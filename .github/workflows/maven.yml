# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml


  security-check:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: trivy installation
      run: |
       sudo apt install -y gnupg2 curl
       curl -fsSL https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy.gpg
       echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb stable main" | sudo tee /etc/apt/sources.list.d/trivy.list
       sudo apt update
       wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb
       sudo dpkg -i trivy_0.18.3_Linux-64bit.deb

        
    - name: trivy fs scan
      run: |
       trivy fs --format table -o fs-report.json .
    - name: gitleaks  scan
      run: sudo apt install gitleaks -y 

    - name: gitleak code scan
      run: gitleaks detect -r source . gitleak-report.json -f json



